求一元二次方程的根
#include<iostream>
using namespace std;
int main()
{
	double a, b, c, disc, x1, x2, p, q;         //disc是判别式
	cin >> a >> b >> c;
	disc = b * b - 4 * a*c;
	if (disc < 0)
		cout << "This equation has not real roots" << endl;
	else
	{
		p = -b / (2.0*a);
		q = sqrt(disc) / (2.0*a);
		x1 = p + q;
		x2 = p - q;
		cout << "real roots:" << "x1=" <<x1<< "x2=" <<x2<< endl;
		return 0;
	}
}

swap函数
#include<iostream>
using namespace std;
int main()
{
	void swap(int *p1, int *p2);
	int a, b;
	int *pointer1, *pointer2;
	cout << "please enter a and b" << endl;
	cin >> a >> b;
	pointer1 = &a;
	pointer2 = &b;
	if (a < b)
		swap(pointer1, pointer2);
	cout << "max=" << a << "min=" << b << endl;
	return 0;
}
void swap(int *p1, int *p2)
{
	int temp;
	temp = *p1;
	*p1 = *p2;
	*p2 = temp;
}

//三角形面积
#include<iostream>
using namespace std;
int main()
{
	const float a = 3, b = 4, c = 5;
	float s, p;
	p = (a + b + c) / 2;
	s = sqrt(p*(p - a)*(p - b)*(p - c));
	cout << "三角形的面积为：" << s << endl;
	return 0;
}

//求年月日具体日期
#include<iostream>
using namespace std;
int main()
{
	int y, m, d, d1, a[13] = { 0,31,28,31,30,31,30,31,31,30,31,30,31 };
	cin >> y >> d;
	d1 = d;
	if (y % 4 == 0 && y % 100 == 0 || y % 400 == 0)
		a[2]++;
	for (m = 1; d1 > a[m]; m++)
		d1 -= a[m];
	cout << "The " << d << "th day of " << y << "is" << y<<"-"<<m<<"-"<<d1<< endl;
	return 0;
}

























